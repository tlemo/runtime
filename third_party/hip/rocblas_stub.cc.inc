// Auto-generated by tools/stub_codegen/generate.sh. Do not edit.

rocblas_status rocblas_create_handle(rocblas_handle* handle) {
  return DynamicCall<decltype(rocblas_create_handle), &rocblas_create_handle>(
      "rocblas_create_handle", handle);
}

rocblas_status rocblas_destroy_handle(rocblas_handle handle) {
  return DynamicCall<decltype(rocblas_destroy_handle), &rocblas_destroy_handle>(
      "rocblas_destroy_handle", handle);
}

rocblas_status rocblas_set_stream(rocblas_handle handle, hipStream_t stream) {
  return DynamicCall<decltype(rocblas_set_stream), &rocblas_set_stream>(
      "rocblas_set_stream", handle, stream);
}

rocblas_status rocblas_get_stream(rocblas_handle handle, hipStream_t* stream) {
  return DynamicCall<decltype(rocblas_get_stream), &rocblas_get_stream>(
      "rocblas_get_stream", handle, stream);
}

rocblas_status rocblas_set_pointer_mode(rocblas_handle handle,
                                        rocblas_pointer_mode pointer_mode) {
  return DynamicCall<decltype(rocblas_set_pointer_mode),
                     &rocblas_set_pointer_mode>("rocblas_set_pointer_mode",
                                                handle, pointer_mode);
}

rocblas_status rocblas_get_pointer_mode(rocblas_handle handle,
                                        rocblas_pointer_mode* pointer_mode) {
  return DynamicCall<decltype(rocblas_get_pointer_mode),
                     &rocblas_get_pointer_mode>("rocblas_get_pointer_mode",
                                                handle, pointer_mode);
}

rocblas_status rocblas_sscal(rocblas_handle handle, rocblas_int n,
                             const float* alpha, float* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_sscal), &rocblas_sscal>(
      "rocblas_sscal", handle, n, alpha, x, incx);
}

rocblas_status rocblas_dscal(rocblas_handle handle, rocblas_int n,
                             const double* alpha, double* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_dscal), &rocblas_dscal>(
      "rocblas_dscal", handle, n, alpha, x, incx);
}

rocblas_status rocblas_cscal(rocblas_handle handle, rocblas_int n,
                             const rocblas_float_complex* alpha,
                             rocblas_float_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_cscal), &rocblas_cscal>(
      "rocblas_cscal", handle, n, alpha, x, incx);
}

rocblas_status rocblas_zscal(rocblas_handle handle, rocblas_int n,
                             const rocblas_double_complex* alpha,
                             rocblas_double_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_zscal), &rocblas_zscal>(
      "rocblas_zscal", handle, n, alpha, x, incx);
}

rocblas_status rocblas_csscal(rocblas_handle handle, rocblas_int n,
                              const float* alpha, rocblas_float_complex* x,
                              rocblas_int incx) {
  return DynamicCall<decltype(rocblas_csscal), &rocblas_csscal>(
      "rocblas_csscal", handle, n, alpha, x, incx);
}

rocblas_status rocblas_zdscal(rocblas_handle handle, rocblas_int n,
                              const double* alpha, rocblas_double_complex* x,
                              rocblas_int incx) {
  return DynamicCall<decltype(rocblas_zdscal), &rocblas_zdscal>(
      "rocblas_zdscal", handle, n, alpha, x, incx);
}

rocblas_status rocblas_scopy(rocblas_handle handle, rocblas_int n,
                             const float* x, rocblas_int incx, float* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_scopy), &rocblas_scopy>(
      "rocblas_scopy", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_dcopy(rocblas_handle handle, rocblas_int n,
                             const double* x, rocblas_int incx, double* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_dcopy), &rocblas_dcopy>(
      "rocblas_dcopy", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_ccopy(rocblas_handle handle, rocblas_int n,
                             const rocblas_float_complex* x, rocblas_int incx,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_ccopy), &rocblas_ccopy>(
      "rocblas_ccopy", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_zcopy(rocblas_handle handle, rocblas_int n,
                             const rocblas_double_complex* x, rocblas_int incx,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zcopy), &rocblas_zcopy>(
      "rocblas_zcopy", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_sdot(rocblas_handle handle, rocblas_int n,
                            const float* x, rocblas_int incx, const float* y,
                            rocblas_int incy, float* result) {
  return DynamicCall<decltype(rocblas_sdot), &rocblas_sdot>(
      "rocblas_sdot", handle, n, x, incx, y, incy, result);
}

rocblas_status rocblas_ddot(rocblas_handle handle, rocblas_int n,
                            const double* x, rocblas_int incx, const double* y,
                            rocblas_int incy, double* result) {
  return DynamicCall<decltype(rocblas_ddot), &rocblas_ddot>(
      "rocblas_ddot", handle, n, x, incx, y, incy, result);
}

rocblas_status rocblas_cdotu(rocblas_handle handle, rocblas_int n,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* y, rocblas_int incy,
                             rocblas_float_complex* result) {
  return DynamicCall<decltype(rocblas_cdotu), &rocblas_cdotu>(
      "rocblas_cdotu", handle, n, x, incx, y, incy, result);
}

rocblas_status rocblas_zdotu(rocblas_handle handle, rocblas_int n,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* y, rocblas_int incy,
                             rocblas_double_complex* result) {
  return DynamicCall<decltype(rocblas_zdotu), &rocblas_zdotu>(
      "rocblas_zdotu", handle, n, x, incx, y, incy, result);
}

rocblas_status rocblas_cdotc(rocblas_handle handle, rocblas_int n,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* y, rocblas_int incy,
                             rocblas_float_complex* result) {
  return DynamicCall<decltype(rocblas_cdotc), &rocblas_cdotc>(
      "rocblas_cdotc", handle, n, x, incx, y, incy, result);
}

rocblas_status rocblas_zdotc(rocblas_handle handle, rocblas_int n,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* y, rocblas_int incy,
                             rocblas_double_complex* result) {
  return DynamicCall<decltype(rocblas_zdotc), &rocblas_zdotc>(
      "rocblas_zdotc", handle, n, x, incx, y, incy, result);
}

rocblas_status rocblas_sswap(rocblas_handle handle, rocblas_int n, float* x,
                             rocblas_int incx, float* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_sswap), &rocblas_sswap>(
      "rocblas_sswap", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_dswap(rocblas_handle handle, rocblas_int n, double* x,
                             rocblas_int incx, double* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_dswap), &rocblas_dswap>(
      "rocblas_dswap", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_cswap(rocblas_handle handle, rocblas_int n,
                             rocblas_float_complex* x, rocblas_int incx,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_cswap), &rocblas_cswap>(
      "rocblas_cswap", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_zswap(rocblas_handle handle, rocblas_int n,
                             rocblas_double_complex* x, rocblas_int incx,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zswap), &rocblas_zswap>(
      "rocblas_zswap", handle, n, x, incx, y, incy);
}

rocblas_status rocblas_saxpy(rocblas_handle handle, rocblas_int n,
                             const float* alpha, const float* x,
                             rocblas_int incx, float* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_saxpy), &rocblas_saxpy>(
      "rocblas_saxpy", handle, n, alpha, x, incx, y, incy);
}

rocblas_status rocblas_daxpy(rocblas_handle handle, rocblas_int n,
                             const double* alpha, const double* x,
                             rocblas_int incx, double* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_daxpy), &rocblas_daxpy>(
      "rocblas_daxpy", handle, n, alpha, x, incx, y, incy);
}

rocblas_status rocblas_caxpy(rocblas_handle handle, rocblas_int n,
                             const rocblas_float_complex* alpha,
                             const rocblas_float_complex* x, rocblas_int incx,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_caxpy), &rocblas_caxpy>(
      "rocblas_caxpy", handle, n, alpha, x, incx, y, incy);
}

rocblas_status rocblas_zaxpy(rocblas_handle handle, rocblas_int n,
                             const rocblas_double_complex* alpha,
                             const rocblas_double_complex* x, rocblas_int incx,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zaxpy), &rocblas_zaxpy>(
      "rocblas_zaxpy", handle, n, alpha, x, incx, y, incy);
}

rocblas_status rocblas_sasum(rocblas_handle handle, rocblas_int n,
                             const float* x, rocblas_int incx, float* result) {
  return DynamicCall<decltype(rocblas_sasum), &rocblas_sasum>(
      "rocblas_sasum", handle, n, x, incx, result);
}

rocblas_status rocblas_dasum(rocblas_handle handle, rocblas_int n,
                             const double* x, rocblas_int incx,
                             double* result) {
  return DynamicCall<decltype(rocblas_dasum), &rocblas_dasum>(
      "rocblas_dasum", handle, n, x, incx, result);
}

rocblas_status rocblas_scasum(rocblas_handle handle, rocblas_int n,
                              const rocblas_float_complex* x, rocblas_int incx,
                              float* result) {
  return DynamicCall<decltype(rocblas_scasum), &rocblas_scasum>(
      "rocblas_scasum", handle, n, x, incx, result);
}

rocblas_status rocblas_dzasum(rocblas_handle handle, rocblas_int n,
                              const rocblas_double_complex* x, rocblas_int incx,
                              double* result) {
  return DynamicCall<decltype(rocblas_dzasum), &rocblas_dzasum>(
      "rocblas_dzasum", handle, n, x, incx, result);
}

rocblas_status rocblas_snrm2(rocblas_handle handle, rocblas_int n,
                             const float* x, rocblas_int incx, float* result) {
  return DynamicCall<decltype(rocblas_snrm2), &rocblas_snrm2>(
      "rocblas_snrm2", handle, n, x, incx, result);
}

rocblas_status rocblas_dnrm2(rocblas_handle handle, rocblas_int n,
                             const double* x, rocblas_int incx,
                             double* result) {
  return DynamicCall<decltype(rocblas_dnrm2), &rocblas_dnrm2>(
      "rocblas_dnrm2", handle, n, x, incx, result);
}

rocblas_status rocblas_scnrm2(rocblas_handle handle, rocblas_int n,
                              const rocblas_float_complex* x, rocblas_int incx,
                              float* result) {
  return DynamicCall<decltype(rocblas_scnrm2), &rocblas_scnrm2>(
      "rocblas_scnrm2", handle, n, x, incx, result);
}

rocblas_status rocblas_dznrm2(rocblas_handle handle, rocblas_int n,
                              const rocblas_double_complex* x, rocblas_int incx,
                              double* result) {
  return DynamicCall<decltype(rocblas_dznrm2), &rocblas_dznrm2>(
      "rocblas_dznrm2", handle, n, x, incx, result);
}

rocblas_status rocblas_isamax(rocblas_handle handle, rocblas_int n,
                              const float* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_isamax), &rocblas_isamax>(
      "rocblas_isamax", handle, n, x, incx, result);
}

rocblas_status rocblas_idamax(rocblas_handle handle, rocblas_int n,
                              const double* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_idamax), &rocblas_idamax>(
      "rocblas_idamax", handle, n, x, incx, result);
}

rocblas_status rocblas_icamax(rocblas_handle handle, rocblas_int n,
                              const rocblas_float_complex* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_icamax), &rocblas_icamax>(
      "rocblas_icamax", handle, n, x, incx, result);
}

rocblas_status rocblas_izamax(rocblas_handle handle, rocblas_int n,
                              const rocblas_double_complex* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_izamax), &rocblas_izamax>(
      "rocblas_izamax", handle, n, x, incx, result);
}

rocblas_status rocblas_isamin(rocblas_handle handle, rocblas_int n,
                              const float* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_isamin), &rocblas_isamin>(
      "rocblas_isamin", handle, n, x, incx, result);
}

rocblas_status rocblas_idamin(rocblas_handle handle, rocblas_int n,
                              const double* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_idamin), &rocblas_idamin>(
      "rocblas_idamin", handle, n, x, incx, result);
}

rocblas_status rocblas_icamin(rocblas_handle handle, rocblas_int n,
                              const rocblas_float_complex* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_icamin), &rocblas_icamin>(
      "rocblas_icamin", handle, n, x, incx, result);
}

rocblas_status rocblas_izamin(rocblas_handle handle, rocblas_int n,
                              const rocblas_double_complex* x, rocblas_int incx,
                              rocblas_int* result) {
  return DynamicCall<decltype(rocblas_izamin), &rocblas_izamin>(
      "rocblas_izamin", handle, n, x, incx, result);
}

rocblas_status rocblas_srot(rocblas_handle handle, rocblas_int n, float* x,
                            rocblas_int incx, float* y, rocblas_int incy,
                            const float* c, const float* s) {
  return DynamicCall<decltype(rocblas_srot), &rocblas_srot>(
      "rocblas_srot", handle, n, x, incx, y, incy, c, s);
}

rocblas_status rocblas_drot(rocblas_handle handle, rocblas_int n, double* x,
                            rocblas_int incx, double* y, rocblas_int incy,
                            const double* c, const double* s) {
  return DynamicCall<decltype(rocblas_drot), &rocblas_drot>(
      "rocblas_drot", handle, n, x, incx, y, incy, c, s);
}

rocblas_status rocblas_crot(rocblas_handle handle, rocblas_int n,
                            rocblas_float_complex* x, rocblas_int incx,
                            rocblas_float_complex* y, rocblas_int incy,
                            const float* c, const rocblas_float_complex* s) {
  return DynamicCall<decltype(rocblas_crot), &rocblas_crot>(
      "rocblas_crot", handle, n, x, incx, y, incy, c, s);
}

rocblas_status rocblas_csrot(rocblas_handle handle, rocblas_int n,
                             rocblas_float_complex* x, rocblas_int incx,
                             rocblas_float_complex* y, rocblas_int incy,
                             const float* c, const float* s) {
  return DynamicCall<decltype(rocblas_csrot), &rocblas_csrot>(
      "rocblas_csrot", handle, n, x, incx, y, incy, c, s);
}

rocblas_status rocblas_zrot(rocblas_handle handle, rocblas_int n,
                            rocblas_double_complex* x, rocblas_int incx,
                            rocblas_double_complex* y, rocblas_int incy,
                            const double* c, const rocblas_double_complex* s) {
  return DynamicCall<decltype(rocblas_zrot), &rocblas_zrot>(
      "rocblas_zrot", handle, n, x, incx, y, incy, c, s);
}

rocblas_status rocblas_zdrot(rocblas_handle handle, rocblas_int n,
                             rocblas_double_complex* x, rocblas_int incx,
                             rocblas_double_complex* y, rocblas_int incy,
                             const double* c, const double* s) {
  return DynamicCall<decltype(rocblas_zdrot), &rocblas_zdrot>(
      "rocblas_zdrot", handle, n, x, incx, y, incy, c, s);
}

rocblas_status rocblas_srotg(rocblas_handle handle, float* a, float* b,
                             float* c, float* s) {
  return DynamicCall<decltype(rocblas_srotg), &rocblas_srotg>(
      "rocblas_srotg", handle, a, b, c, s);
}

rocblas_status rocblas_drotg(rocblas_handle handle, double* a, double* b,
                             double* c, double* s) {
  return DynamicCall<decltype(rocblas_drotg), &rocblas_drotg>(
      "rocblas_drotg", handle, a, b, c, s);
}

rocblas_status rocblas_crotg(rocblas_handle handle, rocblas_float_complex* a,
                             rocblas_float_complex* b, float* c,
                             rocblas_float_complex* s) {
  return DynamicCall<decltype(rocblas_crotg), &rocblas_crotg>(
      "rocblas_crotg", handle, a, b, c, s);
}

rocblas_status rocblas_zrotg(rocblas_handle handle, rocblas_double_complex* a,
                             rocblas_double_complex* b, double* c,
                             rocblas_double_complex* s) {
  return DynamicCall<decltype(rocblas_zrotg), &rocblas_zrotg>(
      "rocblas_zrotg", handle, a, b, c, s);
}

rocblas_status rocblas_srotm(rocblas_handle handle, rocblas_int n, float* x,
                             rocblas_int incx, float* y, rocblas_int incy,
                             const float* param) {
  return DynamicCall<decltype(rocblas_srotm), &rocblas_srotm>(
      "rocblas_srotm", handle, n, x, incx, y, incy, param);
}

rocblas_status rocblas_drotm(rocblas_handle handle, rocblas_int n, double* x,
                             rocblas_int incx, double* y, rocblas_int incy,
                             const double* param) {
  return DynamicCall<decltype(rocblas_drotm), &rocblas_drotm>(
      "rocblas_drotm", handle, n, x, incx, y, incy, param);
}

rocblas_status rocblas_srotmg(rocblas_handle handle, float* d1, float* d2,
                              float* x1, const float* y1, float* param) {
  return DynamicCall<decltype(rocblas_srotmg), &rocblas_srotmg>(
      "rocblas_srotmg", handle, d1, d2, x1, y1, param);
}

rocblas_status rocblas_drotmg(rocblas_handle handle, double* d1, double* d2,
                              double* x1, const double* y1, double* param) {
  return DynamicCall<decltype(rocblas_drotmg), &rocblas_drotmg>(
      "rocblas_drotmg", handle, d1, d2, x1, y1, param);
}

rocblas_status rocblas_sgbmv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n, rocblas_int kl,
                             rocblas_int ku, const float* alpha, const float* A,
                             rocblas_int lda, const float* x, rocblas_int incx,
                             const float* beta, float* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_sgbmv), &rocblas_sgbmv>(
      "rocblas_sgbmv", handle, trans, m, n, kl, ku, alpha, A, lda, x, incx,
      beta, y, incy);
}

rocblas_status rocblas_dgbmv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n, rocblas_int kl,
                             rocblas_int ku, const double* alpha,
                             const double* A, rocblas_int lda, const double* x,
                             rocblas_int incx, const double* beta, double* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_dgbmv), &rocblas_dgbmv>(
      "rocblas_dgbmv", handle, trans, m, n, kl, ku, alpha, A, lda, x, incx,
      beta, y, incy);
}

rocblas_status rocblas_cgbmv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n, rocblas_int kl,
                             rocblas_int ku, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_cgbmv), &rocblas_cgbmv>(
      "rocblas_cgbmv", handle, trans, m, n, kl, ku, alpha, A, lda, x, incx,
      beta, y, incy);
}

rocblas_status rocblas_zgbmv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n, rocblas_int kl,
                             rocblas_int ku,
                             const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zgbmv), &rocblas_zgbmv>(
      "rocblas_zgbmv", handle, trans, m, n, kl, ku, alpha, A, lda, x, incx,
      beta, y, incy);
}

rocblas_status rocblas_sgemv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n, const float* alpha,
                             const float* A, rocblas_int lda, const float* x,
                             rocblas_int incx, const float* beta, float* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_sgemv), &rocblas_sgemv>(
      "rocblas_sgemv", handle, trans, m, n, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_dgemv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n, const double* alpha,
                             const double* A, rocblas_int lda, const double* x,
                             rocblas_int incx, const double* beta, double* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_dgemv), &rocblas_dgemv>(
      "rocblas_dgemv", handle, trans, m, n, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_cgemv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n,
                             const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_cgemv), &rocblas_cgemv>(
      "rocblas_cgemv", handle, trans, m, n, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_zgemv(rocblas_handle handle, rocblas_operation trans,
                             rocblas_int m, rocblas_int n,
                             const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zgemv), &rocblas_zgemv>(
      "rocblas_zgemv", handle, trans, m, n, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_chbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, rocblas_int k,
                             const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_chbmv), &rocblas_chbmv>(
      "rocblas_chbmv", handle, uplo, n, k, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_zhbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, rocblas_int k,
                             const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zhbmv), &rocblas_zhbmv>(
      "rocblas_zhbmv", handle, uplo, n, k, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_chemv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_chemv), &rocblas_chemv>(
      "rocblas_chemv", handle, uplo, n, alpha, A, lda, x, incx, beta, y, incy);
}

rocblas_status rocblas_zhemv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zhemv), &rocblas_zhemv>(
      "rocblas_zhemv", handle, uplo, n, alpha, A, lda, x, incx, beta, y, incy);
}

rocblas_status rocblas_cher(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const float* alpha,
                            const rocblas_float_complex* x, rocblas_int incx,
                            rocblas_float_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_cher), &rocblas_cher>(
      "rocblas_cher", handle, uplo, n, alpha, x, incx, A, lda);
}

rocblas_status rocblas_zher(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const double* alpha,
                            const rocblas_double_complex* x, rocblas_int incx,
                            rocblas_double_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_zher), &rocblas_zher>(
      "rocblas_zher", handle, uplo, n, alpha, x, incx, A, lda);
}

rocblas_status rocblas_cher2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* y, rocblas_int incy,
                             rocblas_float_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_cher2), &rocblas_cher2>(
      "rocblas_cher2", handle, uplo, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_zher2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* y, rocblas_int incy,
                             rocblas_double_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_zher2), &rocblas_zher2>(
      "rocblas_zher2", handle, uplo, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_chpmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* AP,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_chpmv), &rocblas_chpmv>(
      "rocblas_chpmv", handle, uplo, n, alpha, AP, x, incx, beta, y, incy);
}

rocblas_status rocblas_zhpmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* AP,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zhpmv), &rocblas_zhpmv>(
      "rocblas_zhpmv", handle, uplo, n, alpha, AP, x, incx, beta, y, incy);
}

rocblas_status rocblas_chpr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const float* alpha,
                            const rocblas_float_complex* x, rocblas_int incx,
                            rocblas_float_complex* AP) {
  return DynamicCall<decltype(rocblas_chpr), &rocblas_chpr>(
      "rocblas_chpr", handle, uplo, n, alpha, x, incx, AP);
}

rocblas_status rocblas_zhpr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const double* alpha,
                            const rocblas_double_complex* x, rocblas_int incx,
                            rocblas_double_complex* AP) {
  return DynamicCall<decltype(rocblas_zhpr), &rocblas_zhpr>(
      "rocblas_zhpr", handle, uplo, n, alpha, x, incx, AP);
}

rocblas_status rocblas_chpr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* y, rocblas_int incy,
                             rocblas_float_complex* AP) {
  return DynamicCall<decltype(rocblas_chpr2), &rocblas_chpr2>(
      "rocblas_chpr2", handle, uplo, n, alpha, x, incx, y, incy, AP);
}

rocblas_status rocblas_zhpr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* y, rocblas_int incy,
                             rocblas_double_complex* AP) {
  return DynamicCall<decltype(rocblas_zhpr2), &rocblas_zhpr2>(
      "rocblas_zhpr2", handle, uplo, n, alpha, x, incx, y, incy, AP);
}

rocblas_status rocblas_strmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const float* A, rocblas_int lda,
                             float* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_strmv), &rocblas_strmv>(
      "rocblas_strmv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_dtrmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const double* A, rocblas_int lda,
                             double* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_dtrmv), &rocblas_dtrmv>(
      "rocblas_dtrmv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_ctrmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const rocblas_float_complex* A,
                             rocblas_int lda, rocblas_float_complex* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ctrmv), &rocblas_ctrmv>(
      "rocblas_ctrmv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_ztrmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const rocblas_double_complex* A,
                             rocblas_int lda, rocblas_double_complex* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ztrmv), &rocblas_ztrmv>(
      "rocblas_ztrmv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_stpmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const float* A, float* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_stpmv), &rocblas_stpmv>(
      "rocblas_stpmv", handle, uplo, transA, diag, m, A, x, incx);
}

rocblas_status rocblas_dtpmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const double* A, double* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_dtpmv), &rocblas_dtpmv>(
      "rocblas_dtpmv", handle, uplo, transA, diag, m, A, x, incx);
}

rocblas_status rocblas_ctpmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const rocblas_float_complex* A,
                             rocblas_float_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ctpmv), &rocblas_ctpmv>(
      "rocblas_ctpmv", handle, uplo, transA, diag, m, A, x, incx);
}

rocblas_status rocblas_ztpmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const rocblas_double_complex* A,
                             rocblas_double_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ztpmv), &rocblas_ztpmv>(
      "rocblas_ztpmv", handle, uplo, transA, diag, m, A, x, incx);
}

rocblas_status rocblas_stbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation trans, rocblas_diagonal diag,
                             rocblas_int m, rocblas_int k, const float* A,
                             rocblas_int lda, float* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_stbmv), &rocblas_stbmv>(
      "rocblas_stbmv", handle, uplo, trans, diag, m, k, A, lda, x, incx);
}

rocblas_status rocblas_dtbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation trans, rocblas_diagonal diag,
                             rocblas_int m, rocblas_int k, const double* A,
                             rocblas_int lda, double* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_dtbmv), &rocblas_dtbmv>(
      "rocblas_dtbmv", handle, uplo, trans, diag, m, k, A, lda, x, incx);
}

rocblas_status rocblas_ctbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation trans, rocblas_diagonal diag,
                             rocblas_int m, rocblas_int k,
                             const rocblas_float_complex* A, rocblas_int lda,
                             rocblas_float_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ctbmv), &rocblas_ctbmv>(
      "rocblas_ctbmv", handle, uplo, trans, diag, m, k, A, lda, x, incx);
}

rocblas_status rocblas_ztbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation trans, rocblas_diagonal diag,
                             rocblas_int m, rocblas_int k,
                             const rocblas_double_complex* A, rocblas_int lda,
                             rocblas_double_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ztbmv), &rocblas_ztbmv>(
      "rocblas_ztbmv", handle, uplo, trans, diag, m, k, A, lda, x, incx);
}

rocblas_status rocblas_stbsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, rocblas_int k, const float* A,
                             rocblas_int lda, float* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_stbsv), &rocblas_stbsv>(
      "rocblas_stbsv", handle, uplo, transA, diag, n, k, A, lda, x, incx);
}

rocblas_status rocblas_dtbsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, rocblas_int k, const double* A,
                             rocblas_int lda, double* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_dtbsv), &rocblas_dtbsv>(
      "rocblas_dtbsv", handle, uplo, transA, diag, n, k, A, lda, x, incx);
}

rocblas_status rocblas_ctbsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, rocblas_int k,
                             const rocblas_float_complex* A, rocblas_int lda,
                             rocblas_float_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ctbsv), &rocblas_ctbsv>(
      "rocblas_ctbsv", handle, uplo, transA, diag, n, k, A, lda, x, incx);
}

rocblas_status rocblas_ztbsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, rocblas_int k,
                             const rocblas_double_complex* A, rocblas_int lda,
                             rocblas_double_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ztbsv), &rocblas_ztbsv>(
      "rocblas_ztbsv", handle, uplo, transA, diag, n, k, A, lda, x, incx);
}

rocblas_status rocblas_strsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const float* A, rocblas_int lda,
                             float* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_strsv), &rocblas_strsv>(
      "rocblas_strsv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_dtrsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const double* A, rocblas_int lda,
                             double* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_dtrsv), &rocblas_dtrsv>(
      "rocblas_dtrsv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_ctrsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const rocblas_float_complex* A,
                             rocblas_int lda, rocblas_float_complex* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ctrsv), &rocblas_ctrsv>(
      "rocblas_ctrsv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_ztrsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int m, const rocblas_double_complex* A,
                             rocblas_int lda, rocblas_double_complex* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ztrsv), &rocblas_ztrsv>(
      "rocblas_ztrsv", handle, uplo, transA, diag, m, A, lda, x, incx);
}

rocblas_status rocblas_stpsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, const float* AP, float* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_stpsv), &rocblas_stpsv>(
      "rocblas_stpsv", handle, uplo, transA, diag, n, AP, x, incx);
}

rocblas_status rocblas_dtpsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, const double* AP, double* x,
                             rocblas_int incx) {
  return DynamicCall<decltype(rocblas_dtpsv), &rocblas_dtpsv>(
      "rocblas_dtpsv", handle, uplo, transA, diag, n, AP, x, incx);
}

rocblas_status rocblas_ctpsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, const rocblas_float_complex* AP,
                             rocblas_float_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ctpsv), &rocblas_ctpsv>(
      "rocblas_ctpsv", handle, uplo, transA, diag, n, AP, x, incx);
}

rocblas_status rocblas_ztpsv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_diagonal diag,
                             rocblas_int n, const rocblas_double_complex* AP,
                             rocblas_double_complex* x, rocblas_int incx) {
  return DynamicCall<decltype(rocblas_ztpsv), &rocblas_ztpsv>(
      "rocblas_ztpsv", handle, uplo, transA, diag, n, AP, x, incx);
}

rocblas_status rocblas_ssymv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const float* alpha, const float* A,
                             rocblas_int lda, const float* x, rocblas_int incx,
                             const float* beta, float* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_ssymv), &rocblas_ssymv>(
      "rocblas_ssymv", handle, uplo, n, alpha, A, lda, x, incx, beta, y, incy);
}

rocblas_status rocblas_dsymv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const double* alpha,
                             const double* A, rocblas_int lda, const double* x,
                             rocblas_int incx, const double* beta, double* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_dsymv), &rocblas_dsymv>(
      "rocblas_dsymv", handle, uplo, n, alpha, A, lda, x, incx, beta, y, incy);
}

rocblas_status rocblas_csymv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_csymv), &rocblas_csymv>(
      "rocblas_csymv", handle, uplo, n, alpha, A, lda, x, incx, beta, y, incy);
}

rocblas_status rocblas_zsymv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_zsymv), &rocblas_zsymv>(
      "rocblas_zsymv", handle, uplo, n, alpha, A, lda, x, incx, beta, y, incy);
}

rocblas_status rocblas_sspmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const float* alpha, const float* A,
                             const float* x, rocblas_int incx,
                             const float* beta, float* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_sspmv), &rocblas_sspmv>(
      "rocblas_sspmv", handle, uplo, n, alpha, A, x, incx, beta, y, incy);
}

rocblas_status rocblas_dspmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const double* alpha,
                             const double* A, const double* x, rocblas_int incx,
                             const double* beta, double* y, rocblas_int incy) {
  return DynamicCall<decltype(rocblas_dspmv), &rocblas_dspmv>(
      "rocblas_dspmv", handle, uplo, n, alpha, A, x, incx, beta, y, incy);
}

rocblas_status rocblas_ssbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, rocblas_int k, const float* alpha,
                             const float* A, rocblas_int lda, const float* x,
                             rocblas_int incx, const float* beta, float* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_ssbmv), &rocblas_ssbmv>(
      "rocblas_ssbmv", handle, uplo, n, k, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_dsbmv(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, rocblas_int k, const double* alpha,
                             const double* A, rocblas_int lda, const double* x,
                             rocblas_int incx, const double* beta, double* y,
                             rocblas_int incy) {
  return DynamicCall<decltype(rocblas_dsbmv), &rocblas_dsbmv>(
      "rocblas_dsbmv", handle, uplo, n, k, alpha, A, lda, x, incx, beta, y,
      incy);
}

rocblas_status rocblas_sger(rocblas_handle handle, rocblas_int m, rocblas_int n,
                            const float* alpha, const float* x,
                            rocblas_int incx, const float* y, rocblas_int incy,
                            float* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_sger), &rocblas_sger>(
      "rocblas_sger", handle, m, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_dger(rocblas_handle handle, rocblas_int m, rocblas_int n,
                            const double* alpha, const double* x,
                            rocblas_int incx, const double* y, rocblas_int incy,
                            double* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_dger), &rocblas_dger>(
      "rocblas_dger", handle, m, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_cgeru(rocblas_handle handle, rocblas_int m,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* y, rocblas_int incy,
                             rocblas_float_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_cgeru), &rocblas_cgeru>(
      "rocblas_cgeru", handle, m, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_zgeru(rocblas_handle handle, rocblas_int m,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* y, rocblas_int incy,
                             rocblas_double_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_zgeru), &rocblas_zgeru>(
      "rocblas_zgeru", handle, m, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_cgerc(rocblas_handle handle, rocblas_int m,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* y, rocblas_int incy,
                             rocblas_float_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_cgerc), &rocblas_cgerc>(
      "rocblas_cgerc", handle, m, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_zgerc(rocblas_handle handle, rocblas_int m,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* y, rocblas_int incy,
                             rocblas_double_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_zgerc), &rocblas_zgerc>(
      "rocblas_zgerc", handle, m, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_sspr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const float* alpha, const float* x,
                            rocblas_int incx, float* AP) {
  return DynamicCall<decltype(rocblas_sspr), &rocblas_sspr>(
      "rocblas_sspr", handle, uplo, n, alpha, x, incx, AP);
}

rocblas_status rocblas_dspr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const double* alpha, const double* x,
                            rocblas_int incx, double* AP) {
  return DynamicCall<decltype(rocblas_dspr), &rocblas_dspr>(
      "rocblas_dspr", handle, uplo, n, alpha, x, incx, AP);
}

rocblas_status rocblas_sspr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const float* alpha, const float* x,
                             rocblas_int incx, const float* y, rocblas_int incy,
                             float* AP) {
  return DynamicCall<decltype(rocblas_sspr2), &rocblas_sspr2>(
      "rocblas_sspr2", handle, uplo, n, alpha, x, incx, y, incy, AP);
}

rocblas_status rocblas_dspr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const double* alpha,
                             const double* x, rocblas_int incx, const double* y,
                             rocblas_int incy, double* AP) {
  return DynamicCall<decltype(rocblas_dspr2), &rocblas_dspr2>(
      "rocblas_dspr2", handle, uplo, n, alpha, x, incx, y, incy, AP);
}

rocblas_status rocblas_ssyr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const float* alpha, const float* x,
                            rocblas_int incx, float* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_ssyr), &rocblas_ssyr>(
      "rocblas_ssyr", handle, uplo, n, alpha, x, incx, A, lda);
}

rocblas_status rocblas_dsyr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const double* alpha, const double* x,
                            rocblas_int incx, double* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_dsyr), &rocblas_dsyr>(
      "rocblas_dsyr", handle, uplo, n, alpha, x, incx, A, lda);
}

rocblas_status rocblas_csyr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const rocblas_float_complex* alpha,
                            const rocblas_float_complex* x, rocblas_int incx,
                            rocblas_float_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_csyr), &rocblas_csyr>(
      "rocblas_csyr", handle, uplo, n, alpha, x, incx, A, lda);
}

rocblas_status rocblas_zsyr(rocblas_handle handle, rocblas_fill uplo,
                            rocblas_int n, const rocblas_double_complex* alpha,
                            const rocblas_double_complex* x, rocblas_int incx,
                            rocblas_double_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_zsyr), &rocblas_zsyr>(
      "rocblas_zsyr", handle, uplo, n, alpha, x, incx, A, lda);
}

rocblas_status rocblas_ssyr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const float* alpha, const float* x,
                             rocblas_int incx, const float* y, rocblas_int incy,
                             float* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_ssyr2), &rocblas_ssyr2>(
      "rocblas_ssyr2", handle, uplo, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_dsyr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const double* alpha,
                             const double* x, rocblas_int incx, const double* y,
                             rocblas_int incy, double* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_dsyr2), &rocblas_dsyr2>(
      "rocblas_dsyr2", handle, uplo, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_csyr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* x, rocblas_int incx,
                             const rocblas_float_complex* y, rocblas_int incy,
                             rocblas_float_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_csyr2), &rocblas_csyr2>(
      "rocblas_csyr2", handle, uplo, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_zsyr2(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* x, rocblas_int incx,
                             const rocblas_double_complex* y, rocblas_int incy,
                             rocblas_double_complex* A, rocblas_int lda) {
  return DynamicCall<decltype(rocblas_zsyr2), &rocblas_zsyr2>(
      "rocblas_zsyr2", handle, uplo, n, alpha, x, incx, y, incy, A, lda);
}

rocblas_status rocblas_chemm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_int n, rocblas_int k,
                             const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* B, rocblas_int ldb,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_chemm), &rocblas_chemm>(
      "rocblas_chemm", handle, side, uplo, n, k, alpha, A, lda, B, ldb, beta, C,
      ldc);
}

rocblas_status rocblas_zhemm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_int n, rocblas_int k,
                             const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* B, rocblas_int ldb,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_zhemm), &rocblas_zhemm>(
      "rocblas_zhemm", handle, side, uplo, n, k, alpha, A, lda, B, ldb, beta, C,
      ldc);
}

rocblas_status rocblas_cherk(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_int n,
                             rocblas_int k, const float* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const float* beta, rocblas_float_complex* C,
                             rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_cherk), &rocblas_cherk>(
      "rocblas_cherk", handle, uplo, transA, n, k, alpha, A, lda, beta, C, ldc);
}

rocblas_status rocblas_zherk(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_int n,
                             rocblas_int k, const double* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const double* beta, rocblas_double_complex* C,
                             rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_zherk), &rocblas_zherk>(
      "rocblas_zherk", handle, uplo, transA, n, k, alpha, A, lda, beta, C, ldc);
}

rocblas_status rocblas_cher2k(rocblas_handle handle, rocblas_fill uplo,
                              rocblas_operation trans, rocblas_int n,
                              rocblas_int k, const rocblas_float_complex* alpha,
                              const rocblas_float_complex* A, rocblas_int lda,
                              const rocblas_float_complex* B, rocblas_int ldb,
                              const float* beta, rocblas_float_complex* C,
                              rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_cher2k), &rocblas_cher2k>(
      "rocblas_cher2k", handle, uplo, trans, n, k, alpha, A, lda, B, ldb, beta,
      C, ldc);
}

rocblas_status rocblas_zher2k(rocblas_handle handle, rocblas_fill uplo,
                              rocblas_operation trans, rocblas_int n,
                              rocblas_int k,
                              const rocblas_double_complex* alpha,
                              const rocblas_double_complex* A, rocblas_int lda,
                              const rocblas_double_complex* B, rocblas_int ldb,
                              const double* beta, rocblas_double_complex* C,
                              rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_zher2k), &rocblas_zher2k>(
      "rocblas_zher2k", handle, uplo, trans, n, k, alpha, A, lda, B, ldb, beta,
      C, ldc);
}

rocblas_status rocblas_ssymm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_int m, rocblas_int n,
                             const float* alpha, const float* A,
                             rocblas_int lda, const float* B, rocblas_int ldb,
                             const float* beta, float* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_ssymm), &rocblas_ssymm>(
      "rocblas_ssymm", handle, side, uplo, m, n, alpha, A, lda, B, ldb, beta, C,
      ldc);
}

rocblas_status rocblas_dsymm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_int m, rocblas_int n,
                             const double* alpha, const double* A,
                             rocblas_int lda, const double* B, rocblas_int ldb,
                             const double* beta, double* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_dsymm), &rocblas_dsymm>(
      "rocblas_dsymm", handle, side, uplo, m, n, alpha, A, lda, B, ldb, beta, C,
      ldc);
}

rocblas_status rocblas_csymm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_int m, rocblas_int n,
                             const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* B, rocblas_int ldb,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_csymm), &rocblas_csymm>(
      "rocblas_csymm", handle, side, uplo, m, n, alpha, A, lda, B, ldb, beta, C,
      ldc);
}

rocblas_status rocblas_zsymm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_int m, rocblas_int n,
                             const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* B, rocblas_int ldb,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_zsymm), &rocblas_zsymm>(
      "rocblas_zsymm", handle, side, uplo, m, n, alpha, A, lda, B, ldb, beta, C,
      ldc);
}

rocblas_status rocblas_ssyrk(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_int n,
                             rocblas_int k, const float* alpha, const float* A,
                             rocblas_int lda, const float* beta, float* C,
                             rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_ssyrk), &rocblas_ssyrk>(
      "rocblas_ssyrk", handle, uplo, transA, n, k, alpha, A, lda, beta, C, ldc);
}

rocblas_status rocblas_dsyrk(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_int n,
                             rocblas_int k, const double* alpha,
                             const double* A, rocblas_int lda,
                             const double* beta, double* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_dsyrk), &rocblas_dsyrk>(
      "rocblas_dsyrk", handle, uplo, transA, n, k, alpha, A, lda, beta, C, ldc);
}

rocblas_status rocblas_csyrk(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_int n,
                             rocblas_int k, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_csyrk), &rocblas_csyrk>(
      "rocblas_csyrk", handle, uplo, transA, n, k, alpha, A, lda, beta, C, ldc);
}

rocblas_status rocblas_zsyrk(rocblas_handle handle, rocblas_fill uplo,
                             rocblas_operation transA, rocblas_int n,
                             rocblas_int k, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_zsyrk), &rocblas_zsyrk>(
      "rocblas_zsyrk", handle, uplo, transA, n, k, alpha, A, lda, beta, C, ldc);
}

rocblas_status rocblas_ssyr2k(rocblas_handle handle, rocblas_fill uplo,
                              rocblas_operation trans, rocblas_int n,
                              rocblas_int k, const float* alpha, const float* A,
                              rocblas_int lda, const float* B, rocblas_int ldb,
                              const float* beta, float* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_ssyr2k), &rocblas_ssyr2k>(
      "rocblas_ssyr2k", handle, uplo, trans, n, k, alpha, A, lda, B, ldb, beta,
      C, ldc);
}

rocblas_status rocblas_dsyr2k(rocblas_handle handle, rocblas_fill uplo,
                              rocblas_operation trans, rocblas_int n,
                              rocblas_int k, const double* alpha,
                              const double* A, rocblas_int lda, const double* B,
                              rocblas_int ldb, const double* beta, double* C,
                              rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_dsyr2k), &rocblas_dsyr2k>(
      "rocblas_dsyr2k", handle, uplo, trans, n, k, alpha, A, lda, B, ldb, beta,
      C, ldc);
}

rocblas_status rocblas_csyr2k(rocblas_handle handle, rocblas_fill uplo,
                              rocblas_operation trans, rocblas_int n,
                              rocblas_int k, const rocblas_float_complex* alpha,
                              const rocblas_float_complex* A, rocblas_int lda,
                              const rocblas_float_complex* B, rocblas_int ldb,
                              const rocblas_float_complex* beta,
                              rocblas_float_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_csyr2k), &rocblas_csyr2k>(
      "rocblas_csyr2k", handle, uplo, trans, n, k, alpha, A, lda, B, ldb, beta,
      C, ldc);
}

rocblas_status rocblas_zsyr2k(rocblas_handle handle, rocblas_fill uplo,
                              rocblas_operation trans, rocblas_int n,
                              rocblas_int k,
                              const rocblas_double_complex* alpha,
                              const rocblas_double_complex* A, rocblas_int lda,
                              const rocblas_double_complex* B, rocblas_int ldb,
                              const rocblas_double_complex* beta,
                              rocblas_double_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_zsyr2k), &rocblas_zsyr2k>(
      "rocblas_zsyr2k", handle, uplo, trans, n, k, alpha, A, lda, B, ldb, beta,
      C, ldc);
}

rocblas_status rocblas_strmm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const float* alpha, const float* A,
                             rocblas_int lda, float* B, rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_strmm), &rocblas_strmm>(
      "rocblas_strmm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_dtrmm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const double* alpha,
                             const double* A, rocblas_int lda, double* B,
                             rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_dtrmm), &rocblas_dtrmm>(
      "rocblas_dtrmm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_ctrmm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             rocblas_float_complex* B, rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_ctrmm), &rocblas_ctrmm>(
      "rocblas_ctrmm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_ztrmm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             rocblas_double_complex* B, rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_ztrmm), &rocblas_ztrmm>(
      "rocblas_ztrmm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_strsm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const float* alpha, const float* A,
                             rocblas_int lda, float* B, rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_strsm), &rocblas_strsm>(
      "rocblas_strsm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_dtrsm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const double* alpha,
                             const double* A, rocblas_int lda, double* B,
                             rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_dtrsm), &rocblas_dtrsm>(
      "rocblas_dtrsm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_ctrsm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             rocblas_float_complex* B, rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_ctrsm), &rocblas_ctrsm>(
      "rocblas_ctrsm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_ztrsm(rocblas_handle handle, rocblas_side side,
                             rocblas_fill uplo, rocblas_operation transA,
                             rocblas_diagonal diag, rocblas_int m,
                             rocblas_int n, const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             rocblas_double_complex* B, rocblas_int ldb) {
  return DynamicCall<decltype(rocblas_ztrsm), &rocblas_ztrsm>(
      "rocblas_ztrsm", handle, side, uplo, transA, diag, m, n, alpha, A, lda, B,
      ldb);
}

rocblas_status rocblas_sgemm(rocblas_handle handle, rocblas_operation transA,
                             rocblas_operation transB, rocblas_int m,
                             rocblas_int n, rocblas_int k, const float* alpha,
                             const float* A, rocblas_int lda, const float* B,
                             rocblas_int ldb, const float* beta, float* C,
                             rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_sgemm), &rocblas_sgemm>(
      "rocblas_sgemm", handle, transA, transB, m, n, k, alpha, A, lda, B, ldb,
      beta, C, ldc);
}

rocblas_status rocblas_dgemm(rocblas_handle handle, rocblas_operation transA,
                             rocblas_operation transB, rocblas_int m,
                             rocblas_int n, rocblas_int k, const double* alpha,
                             const double* A, rocblas_int lda, const double* B,
                             rocblas_int ldb, const double* beta, double* C,
                             rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_dgemm), &rocblas_dgemm>(
      "rocblas_dgemm", handle, transA, transB, m, n, k, alpha, A, lda, B, ldb,
      beta, C, ldc);
}

rocblas_status rocblas_hgemm(rocblas_handle handle, rocblas_operation transA,
                             rocblas_operation transB, rocblas_int m,
                             rocblas_int n, rocblas_int k,
                             const rocblas_half* alpha, const rocblas_half* A,
                             rocblas_int lda, const rocblas_half* B,
                             rocblas_int ldb, const rocblas_half* beta,
                             rocblas_half* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_hgemm), &rocblas_hgemm>(
      "rocblas_hgemm", handle, transA, transB, m, n, k, alpha, A, lda, B, ldb,
      beta, C, ldc);
}

rocblas_status rocblas_cgemm(rocblas_handle handle, rocblas_operation transA,
                             rocblas_operation transB, rocblas_int m,
                             rocblas_int n, rocblas_int k,
                             const rocblas_float_complex* alpha,
                             const rocblas_float_complex* A, rocblas_int lda,
                             const rocblas_float_complex* B, rocblas_int ldb,
                             const rocblas_float_complex* beta,
                             rocblas_float_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_cgemm), &rocblas_cgemm>(
      "rocblas_cgemm", handle, transA, transB, m, n, k, alpha, A, lda, B, ldb,
      beta, C, ldc);
}

rocblas_status rocblas_zgemm(rocblas_handle handle, rocblas_operation transA,
                             rocblas_operation transB, rocblas_int m,
                             rocblas_int n, rocblas_int k,
                             const rocblas_double_complex* alpha,
                             const rocblas_double_complex* A, rocblas_int lda,
                             const rocblas_double_complex* B, rocblas_int ldb,
                             const rocblas_double_complex* beta,
                             rocblas_double_complex* C, rocblas_int ldc) {
  return DynamicCall<decltype(rocblas_zgemm), &rocblas_zgemm>(
      "rocblas_zgemm", handle, transA, transB, m, n, k, alpha, A, lda, B, ldb,
      beta, C, ldc);
}
